// Generated by bindee 2.1.1 from const.hh.
#ifndef BIND_CONST_HH
#define BIND_CONST_HH

#include <pybind11/pybind11.h>
namespace py = pybind11;

@INCLUDES@

// Records.

template <typename Target>
void bind_A(Target &target);

// Bind functions.

template <typename Target>
void bind_A(Target &target) {
    using Class = A;

    std::string className = "A";
    std::string docString = @DOC_STRING@;

    py::class_<Class> bindee(target, className.c_str(), docString.c_str());
    bindee.def("foo", (void (Class::*)() @CONST?@) &Class::foo);
    bindee.def("foo", (void (Class::*)() @CONST?@) &Class::foo<@T0@>);
    bindee.def("bar", (void (Class::*)() const) &Class::bar);
    bindee.def("bar", (void (Class::*)()) &Class::bar<@T0@>);
}

#endif // BIND_CONST_HH
