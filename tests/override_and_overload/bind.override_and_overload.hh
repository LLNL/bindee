// Generated by bindee 2.1 from override_and_overload.hh.
#ifndef BIND_OVERRIDE_AND_OVERLOAD_HH
#define BIND_OVERRIDE_AND_OVERLOAD_HH

#include <pybind11/pybind11.h>
namespace py = pybind11;

@INCLUDES@

// Records.

template <typename Target>
void bind_A(Target &target);
template <typename Target>
void bind_B(Target &target);

// Bind functions.

template <typename Target>
void bind_A(Target &target) {
    using Class = A;

    std::string className = "A";
    std::string docString = @DOC_STRING@;

    py::class_<Class> bindee(target, className.c_str(), docString.c_str());
    bindee.def("foo", (void (Class::*)()) &Class::foo);
}

template <typename Target>
void bind_B(Target &target) {
    using Class = B;

    std::string className = "B";
    std::string docString = @DOC_STRING@;

    py::class_<Class, A> bindee(target, className.c_str(), docString.c_str());
    bindee.def("foo", (void (Class::*)()) &Class::foo);
    bindee.def("foo", (void (Class::*)(int)) &Class::foo);
}

#endif // BIND_OVERRIDE_AND_OVERLOAD_HH
