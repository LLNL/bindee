// Generated by bindee 2.1.1 from immutable.hh.
#ifndef BIND_IMMUTABLE_HH
#define BIND_IMMUTABLE_HH

#include <pybind11/pybind11.h>

@INCLUDES@

// Bind functions.

template <typename Target>
void bind_immutable_globals(Target &target) {
    namespace py = pybind11;
    target.def("aa", (void (*)(const int *)) &aa);
    target.def("bb", (void (*)(const float *)) &bb);
    target.def("cc", (void (*)(const double *)) &cc);
    target.def("dd", (void (*)(const long &)) &dd);
    target.def("ee", (void (*)(const bool &)) &ee);
    target.def("ff", (void (*)(const std::string *)) &ff);
    target.def("gg", (void (*)(const std::string &)) &gg);
    target.def("aaa", (void (*)(int)) &aaa);
    target.def("bbb", (void (*)(float)) &bbb);
    target.def("ccc", (void (*)(double)) &ccc);
    target.def("ddd", (void (*)(long)) &ddd);
    target.def("eee", (void (*)(bool)) &eee);
    target.def("fff", (void (*)(std::string)) &fff);
}

#endif // BIND_IMMUTABLE_HH
